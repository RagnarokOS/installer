#!/bin/ksh

# $Ragnarok$

. /lib/ragnarok-installer/funcs
. /lib/ragnarok-installer/lists

# Set colors
export NEWT_COLORS='
root=black,black
shadow=black,black
window=,black
border=white,black
title=white,black
textbox=white,black
button=black,white
checkbox=white,black
actcheckbox=black,white
compactbutton=white,black
entry=white,black
'

## Global Variables
FLAVOUR="bookworm"
VERSION="01"
CONF=${CONF:-install.conf}

## Functions

# Create the base system.
debstrap() {
	/usr/bin/mmdebstrap --variant=minbase \
		--components="main non-free-firmware" \
		--include="usrmerge ca-certificates oksh signify-openbsd less wget ed" \
		--hook-directory=/lib/ragnarok-installer/hooks \
		--skip=check/empty "${FLAVOUR}" /mnt \
		"deb https://ragnarokos.github.io/base/deb/ ${VERSION} main" \
		"deb http://deb.debian.org/debian/ ${FLAVOUR} main non-free-firmware" \
		"deb http://security.debian.org/ ${FLAVOUR}-security main non-free-firmware" \
		"deb http://deb.debian.org/debian/ ${FLAVOUR}-updates main non-free-firmware"
}

# Partition the device
part_dev() {
	local _dev _mode _swap _root _home _homesize _bootparttype

	_dev=$(get_val Device "$CONF")
	_mode=$(get_val Bootmode "$CONF")
	_swap=$(get_val Swap "$CONF")
	_root=$(get_val Root "$CONF")
	_home=$(get_val Home "$CONF")

	# Wipe device
	sfdisk --delete "$_dev" || true

	# Set the proper part table (mbr for bios, GPT for EFI).
	case "$_mode" in
		bios)
			(echo o) | fdisk "$_dev"
			_bootparttype="L"
			;;
		efi)
			(echo g) | fdisk "$_dev"
			_bootparttype="U"
			;;
	esac

	# Home may be left empty to use the remaining space, so
	# handle it properly.
	if [[ -z $_home ]]; then
		_homsesize="+"
	else
		_homesize="${_home}"
	fi

	printf '%s\n' "start=2048, size=500M, type=$_bootparttype
	size=${_swap}, type=S
	size=${_root}, type=L
	size=${_homesize}, type=L" | sfdisk "${_dev}"

	# Set bootable flag on partition 1.
	case "$_mode" in
		bios)	sfdisk -A "$_dev" 1
			;;
		efi)	sfdisk --part-type "$_dev" 1 U
			;;
	esac
}

# Create filesystems and mount the device
mount_dev() {
	local _dev _mode

	_dev=$(get_val Device "$CONF")
	_mode=$(get_val Bootmode "$CONF")

	case "$_mode" in
		bios)
			mkfs.ext4 -F "${_dev}1"
			;;
		efi)
			mkfs.vfat -F 32 "${_dev}1"
			;;
	esac
	mkswap "${_dev}2"
	# mkfs will ask to proceed anyway unless -F is used.
	mkfs.ext4 -F "${_dev}3"
	mkfs.ext4 -F "${_dev}4"

	swapon "${_dev}2"
	mount -t ext4 -o errors=remount-ro "${_dev}3" /mnt
	mkdir -p /mnt/{boot,home}
	mount -t ext4 -o defaults "${_dev}4" /mnt/home
	case "$_mode" in
		bios)
			mount -t ext4 -o noexec,nosuid,nodev "${_dev}1" /mnt/boot
			;;
		efi)
			mkdir -p /mnt/boot/efi
			mount -t vfat -o umask=0077,noexec,nosuid,nodev "${_dev}1" /mnt/boot/efi
			;;
	esac
}

# Don't pollute console with stdout.
make_dev() {
	# If no boot part size is not present, then the user skipped partitioning.
	if [[ -z $(get_val Bootmode "$CONF") ]]; then
		_skipbootloader="yes"
	else
		part_dev > /dev/null
		mount_dev > /dev/null
	fi
}



main() {
	/lib/ragnarok-installer/mkdisk
	debstrap
}
main
