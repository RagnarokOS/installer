#!/bin/ksh

# mkconf - create install.conf
# $Ragnarok: mkconf,v 1.6 2024/07/28 15:50:24 lecorbeau Exp $

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#											#
#	Copyright (c) 2023-2024, Ian LeCorbeau <I-LeCorbeau@protonmail.com>		#
#											#
#	Permission to use, copy, modify, and/or distribute this software for any	#
#	purpose with or without fee is hereby granted, provided that the above		#
#	copyright notice and this permission notice appear in all copies.		#
#											#
#	THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES	#
#	WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF		#
#	MERCHANTABILITY AND FITNESS IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR		#
#	ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES		#
#	WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN		#
#	ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF		#
#	OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.			#
#											#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

CONF=${CONF:-install.conf}

# Set values in conf files
set_val() {
	local _conf="$1" _value="$2" _file="$3"

	printf '%s\n' "${_conf} = ${_value}" >> "$_file"
}

# In some cases a user should be able to display a list of available options.
# Unfortunately, we can't use variables piped through less as it gives very
# inconsistent (or non-existent) results. So each of them need their own
# functions.
ask_tz() {
	local _resp _q="$1"

	read -r _resp?"$_q "
	case "$_resp" in
		l)	less --prompt="/ to search, j/k to navigate, q to quit, h for help " /usr/share/ragnarok-installer/lists/tz.list; ask_tz "$@"
			;;
		*)	set_val TZ "$_resp" "$CONF"
			;;
	esac
}

ask_locale() {
	local _resp _q="$1"

	read -r _resp?"$_q "
	case "$_resp" in
		l)	less --prompt="/ to search, j/k to navigate, q to quit, h for help " /usr/share/ragnarok-installer/lists/locales.list; ask_locale "$@"
			;;
		*)	set_val LOCALE "$_resp" "$CONF"
			;;
	esac
}

ask_kb() {
	local _resp _q="$1"

	read -r _resp?"$_q "
	case "$_resp" in
		l)	less --prompt="/ to search, j/k to navigate, q to quit, h for help " /usr/share/ragnarok-installer/lists/xkblayout.list; ask_kb "$@"
			;;
		*)	set_val XKB_LAYOUT "$_resp" "$CONF"
			;;
	esac
}

# Function for set selection
ask_sets() {
	local _resp _sets _Yn

	read -r _resp?"Aside from the base system, the following sets (metapackages)
can be installed:
[x] devel   | The git and build-essential packages, plus LLVM/Clang toolchain.
[x] virt    | Minimal package set to run virtual machines with QEMU.
[x] xserv   | Minimal xorg + xinit.
[x] xfonts  | Extra fonts for xserv.
[x] xprogs  | Window Managers (Raven, cwm) + ragnarok-terminal and dmenu.

Leave empty to install all sets, or else type the name of the sets to be installed.
Press Return when done.

Sets to install [all]: "
	echo

	# We need word splitting.
	# shellcheck disable=SC2086
	if [[ -n $_resp ]]; then
		set -A _sets -- $_resp
	else
		set -A _sets -- devel virt xserv xfonts xprogs
	fi

	read -r _Yn?"The following sets will be installed: ${_sets[*]}. Proceed? (Y/n): "
	case "$_Yn" in
		Y|y)	for _set in "${_sets[@]}"; do
				set_val "$_set" Yes "$CONF"
			done
			;;
		N|n)	sed -i '/Yes/d' "$CONF"
			;;
		*)	for _set in "${_sets[@]}"; do
				set_val "$_set" Yes "$CONF"
			done
			;;
	esac

}

## Begin actual script.

# Hostname
askconf "Hostname for this machine?" HOSTNAME "$CONF"

# Timezone
ask_tz "Enter the time zone for this system. e.g. America/New_York. ('l' for a list of supported time zones):"

# Locale
ask_locale "Enter the locale for this system. e.g. en_US.UTF-8 ('l' for a list of supported locales):"

# Keyboard layout
ask_kb "Set the keyboard layout. e.g. 'us'. ('l' for a list of available layouts):"

# Sets/metapackage selection
ask_sets
