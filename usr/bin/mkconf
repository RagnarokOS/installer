#!/bin/ksh

# mkconf - create install.conf file for auto-installs. This is not used by the installer
# itself.

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#											#
#	Copyright (c) 2023, Ian LeCorbeau <I-LeCorbeau (at) protonmail (dot) com>	#
#											#
#	Permission to use, copy, modify, and/or distribute this software for any	#
#	purpose with or without fee is hereby granted, provided that the above		#
#	copyright notice and this permission notice appear in all copies.		#
#											#
#	THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES	#
#	WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF		#
#	MERCHANTABILITY AND FITNESS IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR		#
#	ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES		#
#	WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN		#
#	ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF		#
#	OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.			#
#											#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

CONF=${CONF:-install.conf}

. /lib/ragnarok-installer/funcs

# Hostname
askconf "Hostname for this machine?" HOSTNAME "$CONF"

# In some cases a user should be able to display a list of available options.
# Unfortunately, we can't use variables piped through less as it gives very
# inconsistent (or non-existent) results. So each of them need their own
# functions.
ask_tz() {
	local _resp _q="$1"

	read -r _resp?"$_q "
	case "$_resp" in
		l)	less --prompt="/ to search, j/k to navigate, q to quit, h for help " /usr/share/ragnarok-installer/lists/tz.list; ask_tz "$@"
			;;
		*)	set_val TZ "$_resp" "$CONF"
			;;
	esac
}
ask_tz "Enter the time zone for this system. e.g. America/New_York. ('l' for a list of supported time zones):"

ask_locale() {
	local _resp _q="$1"

	read -r _resp?"$_q "
	case "$_resp" in
		l)	less --prompt="/ to search, j/k to navigate, q to quit, h for help " /usr/share/ragnarok-installer/lists/locales.list; ask_tz "$@"
			;;
		*)	set_val LOCALE "$_resp" "$CONF"
			;;
	esac
}
ask_locale "Enter the locale for this system. e.g. en_US.UTF-8 ('l' for a list of supported locales):"

ask_kb() {
	local _resp _q="$1"

	read -r _resp?"$_q "
	case "$_resp" in
		l)	less --prompt="/ to search, j/k to navigate, q to quit, h for help " /usr/share/ragnarok-installer/lists/xkblayout.list; ask_tz "$@"
			;;
		*)	set_val XKB_LAYOUT "$_resp" "$CONF"
			;;
	esac
}
ask_kb "Set the keyboard layout. e.g. 'us'. ('l' for a list of available layouts):"

echo
# Root password
askpass "Password for the root account (will not echo).
Note: storing passwords in plain text is a terrible idea. This should be a
temporary password only and should be changed on first boot. Leave empty if
you'd rather be prompted for a password at install time." ROOTPASS "$CONF"
echo
echo
# Setup user
askconf "Name for default user (leave blank to setup user after first boot):" USERNAME "$CONF"
echo
echo
# User password
askpass "Password for the root account (will not echo).
Note: storing passwords in plain text is a terrible idea. This should be a
temporary password only and should be changed on first boot. Leave empty if
you'd rather be prompted for a password at install time." USERPASS "$CONF"
echo
echo
# X or no X
askconf "Will this system use X11? ('yes' or 'no')?:" X11 "$CONF"

echo
askconf "Should this system be installed from scratch, or using the sets? ('netinstall' or 'sets'):" SETS "$CONF"

if [[ $(get_val SETS $CONF) == sets ]]; then
	echo
	# The sets should be fetched from where
	askconf "Location of the base system? ('disk' or 'network'. 'l' to view list and description)" BASELOC "$CONF"
fi
