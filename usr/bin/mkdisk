#!/bin/ksh

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#											#
#	Copyright (c) 2023, Ian LeCorbeau <I-LeCorbeau (at) protonmail (dot) com>	#
#											#
#	Permission to use, copy, modify, and/or distribute this software for any	#
#	purpose with or without fee is hereby granted, provided that the above		#
#	copyright notice and this permission notice appear in all copies.		#
#											#
#	THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES	#
#	WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF		#
#	MERCHANTABILITY AND FITNESS IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR		#
#	ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES		#
#	WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN		#
#	ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF		#
#	OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.			#
#											#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

## Global Variables
CONF=${CONF:-disk.conf}

. /lib/ragnarok-installer/funcs

# Create config file
do_conf() {
	lsblk -lp | awk '/disk/ { print $1, "(" $4 ")" }'
	askconf "On which disk should the system be installed? (e.g. /dev/sdX):" DISK "$CONF"
	askconf "Will you boot in bios or efi mode (answer 'bios' or 'efi')?:" MODE "$CONF"
	askconf "Size of swap partition (number followed by M or G, e.g. 500M, 1G, etc):" SWAPSIZE "$CONF"
	askconf "Size of the root partition in GB (number followed by M or G, e.g. 30G):" ROOTSIZE "$CONF"
	askconf "Size of the /var/log partition (leave empty to use the default, which is 3G):" LOGSIZE "$CONF"
	askconf "Size of /home (leave empty to use the rest of the available disk space):" HOMESIZE "$CONF"
}

# Actually partition and mount the disk
do_disk() {
	# sleeping in-between commands produces an easier
	# to read output.
	do_parttable
	sleep 1
	do_boot
	sleep 1
	do_swap
	sleep 1
	do_root
	sleep 1
	do_swap
	sleep 1
	do_log
	sleep 1
	do_home
	sleep 1
	do_fs
	sleep 1
	do_mount
}

# Main partitioning function
do_part() {
	local _disk

	_disk=$(get_val DISK)
	askyn "The following disk will be formatted: ${_disk}. Proceed? (Y/n)" 
	_ret=$?

	case "$_ret" in
		0)	do_disk
			;;
		1)	echo "Exiting..." && exit 1
			;;
		*)	do_disk
			;;
	esac
}

case "$1" in
	-c|--config)	 	do_conf
				;;
	-m|--make)		do_part
				;;
esac
